class:: GFX_Rack
summary:: effectsrack
categories:: Green
related:: Classes/GFX_RackGUI, Classes/GFX_Module, Classes/GFX_ModuleGUI


DESCRIPTION::
A stack of effect modules connected to a bus playing in order on a target.


CLASSMETHODS::

METHOD:: new

ARGUMENT:: efxs
An LINK::Classes/Array:: with LINK::Classes/GFX_Module:: STRONG::classes:: or STRONG::instances:: to be put into the rack. If not specified a default set of modules will be used. CODE::[GFXComb, GFXFreq, GFXRvrs, GFXTank, GFXTanh, GFXZzzz]::
NOTE::
Order is important - determines signal flow - top to bottom.
::
CODE::
//simple example with 4 effects (stereo)
(
r= GFX_Rack([
	GFXFreq,
	GFXPch2(),  //an instance will be hijacked (insert in order and set bus)
	GFXTanh,
	GFXTank
]);
)
::

ARGUMENT:: target
A LINK::Classes/Server:: or a LINK::Classes/Group::. If not given CODE::Server.default:: will be used (and automatically booted if not already running).

ARGUMENT:: bus
Which audio bus to use as input and output for the rack. See LINK::#-outbus:: for routing the output elsewhere. Note that several consecutive busses might be used - depends on numChannels argument.

ARGUMENT:: lags
A single LINK::Classes/Float:: or an LINK::Classes/Array:: of floats specifying general lag time for parameters.

ARGUMENT:: numChannels
The default is stereo but can be any number.

ARGUMENT:: action
A LINK::Classes/Function:: to be evaluated after the rack is finished setting up. The function will be deferred and called on the LINK::Classes/AppClock::.


INSTANCEMETHODS::

PRIVATE:: initGFX_Rack, prBuildDef

METHOD:: efxs
An LINK::Classes/Array:: with current LINK::Classes/GFX_Module:: STRONG::instances:: (compare with creation methods above where classes or instances are expected).

METHOD:: group
The LINK::Classes/Group:: that the rack is using. If target wasn't specified when the rack was created this will be CODE::Server.default.defaultGroup::.


SUBSECTION:: Synth

METHOD:: bus

METHOD:: free

METHOD:: lags

METHOD:: outbus
Which audio bus to use as output for the rack. By default this will be the same as bus in LINK::#*new:: above. Set this to route audio elsewhere. Note that several consecutive busses might be used - depends on numChannels argument.

METHOD:: pause
Call pause on all effect modules.

METHOD:: vol


SUBSECTION:: Convenience methods

METHOD:: gui
Create a LINK::Classes/GFX_RackGUI::.

ARGUMENT:: position
A LINK::Classes/Point::

ARGUMENT:: version
An LINK::Classes/Integer:: defining style.

RETURNS:: a LINK::Classes/GFX_RackGUI::


EXAMPLES::

SUBSECTION:: Basics

CODE::
s.boot;
a= {SinOsc.ar([400, 404], 0, 0.1)}.play;  //test sound

r= GFX_Rack();
r.efxs;  //default modules
r.freqMix= 0.5;

g= r.gui;  //optional gui
::
